<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>perrytech</groupId>
  <artifactId>forests-and-monsters</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>forests-and-monsters</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<standalone.classpath>FitNesse/fixtures</standalone.classpath>
		<port>8082</port>
		<suitePath>FitNesse.SuiteAcceptanceTests</suitePath>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>4.3.1</version>
      <scope>test</scope>
  </dependency>
  <!-- https://mvnrepository.com/artifact/org.fitnesse/fitnesse -->
    <dependency>
      <groupId>org.fitnesse</groupId>
      <artifactId>fitnesse</artifactId>
      <version>20211030</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
		<profile>
			<id>fitnesse</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.8.1</version>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
							<encoding>${project.build.sourceEncoding}</encoding>
							<showDeprecation>true</showDeprecation>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<executable>java</executable>
							<workingDirectory>FitNesse</workingDirectory>
							<arguments>
								<argument>-jar</argument>
								<argument>fitnesse-standalone.jar</argument>
								<argument>-p</argument>
								<argument>${port}</argument>
								<argument>-f</argument>
								<argument>plugins.properties</argument>
								<argument>-l</argument>
								<argument>logs</argument>
							</arguments>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.22.2</version>
						<configuration>
							<excludes>
								<!-- this test actually runs fitnesse tests therefore it will only
									be executed for integration-test goal -->
								<exclude>**/FitnesseSuiteTest.java</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.2</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- this test actually runs fitnesse tests -->
							<test>FitnesseSuiteTest</test>
							<systemPropertyVariables>
								<fitnesseSuiteToRun>${suitePath}</fitnesseSuiteToRun>
							</systemPropertyVariables>
							<properties>
								<property>
									<name>listener</name>
									<value>com.github.sitture.JUnitXMLPerPageListener,com.github.sitture.ProgressLoggerListener</value>
								</property>
							</properties>
							<!-- Our listener will create XML failsafe should not, or all tests
								are reported twice -->
							<disableXmlReport>true</disableXmlReport>
						</configuration>
					</plugin>
					<plugin>
						<!-- Use dependency:copy-dependencies to copy all jar from dependencies
							to ${standalone.classpath}, where classes from this project end up also,
							so that all fixtures and dependencies are available to Fitnesse without need
							to have Maven to run tests. -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.1.2</version>
						<configuration>
							<includes>**/*</includes>
							<excludes>META-INF,META-INF/**</excludes>
							<includeScope>runtime</includeScope>
							<excludeArtifactIds>fitnesse,junit</excludeArtifactIds>
							<outputDirectory>${standalone.classpath}</outputDirectory>
						</configuration>
						<executions>
							<execution>
							  <?m2e execute onConfiguration,onIncremental?>
								<id>copy-fitnesse-standalone</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.fitnesse</groupId>
											<artifactId>fitnesse</artifactId>
											<classifier>standalone</classifier>
											<overWrite>true</overWrite>
										</artifactItem>
									</artifactItems>
									<stripVersion>true</stripVersion>
									<outputDirectory>${project.basedir}/FitNesse</outputDirectory>
								</configuration>
							</execution>
							<execution>
							  <?m2e execute onConfiguration,onIncremental?>
								<id>copy-plugins</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.fitnesse.plugins</groupId>
											<artifactId>maven-classpath-plugin</artifactId>
											<version>1.9</version>
											<classifier>jar-with-dependencies</classifier>
											<overWrite>true</overWrite>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.basedir}/FitNesse/plugins</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>copy-dependencies-to-wiki-fixtures</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>3.3.0</version>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/standalone.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>create-standalone-zip</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
